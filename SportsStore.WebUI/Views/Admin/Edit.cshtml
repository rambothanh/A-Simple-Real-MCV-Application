@using System.Activities.Statements
@model SportsStore.Domain.Entities.Product
@{
    ViewBag.Title = "Admin: Edit " + @Model.Name;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    //Cách để tắt xác thực phía máy khách
    //HtmlHelper.ClientValidationEnabled = false;
    //HtmlHelper.UnobtrusiveJavaScriptEnabled = false;

}

<div class="panel">
    <div class="panel-heading">
        <h3>Edit @Model.Name</h3>
    </div>
    @*Mặc định: khi submit Html.BeginForm sẽ trở về action vừa gọi
        view này tức là "Edit" action.
        Tuy nhiên: ngoài Edit action gọi View này , còn có "Create" action
        cũng gọi View này, và khi submit thì dữ liệu sẽ gửi về action "Create"
        mà action này ta lại chưa định nghĩa overload cho nó (vì sử dụng chung với "Edit")
        Mà ta muốn khi submit thì tất cả đều gọi "Edit" action
        nên mới thêm hai tham số rõ ràng vào Html.BeginForm("Edit", "Admin") *@
    @using (Html.BeginForm("Edit", "Admin"))
    {
        <div class="panel-body">
            @Html.HiddenFor(m => m.ProductID)
            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                if (property.PropertyName != "ProductID")
                {
                    <div class="form-group">
                        <label>@(property.DisplayName ?? property.PropertyName)</label>
                        @if (property.PropertyName == "Description")
                        {
                            @Html.TextArea(property.PropertyName,null, new
                            {
                                @class = "form-control", rows = 5
                            })
                        }
                        else
                        {
                            @Html.TextBox(property.PropertyName,null, new
                            {
                                @class ="form-control"
                            })
                        }
                        @*Adding Validation Messages*@
                        @Html.ValidationMessage(property.PropertyName)
                    </div>
                }
            }
        </div>
        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel and return to List","Index",null, new
            {
                @class ="btn btn-default"
            })
        </div>

    }


</div>